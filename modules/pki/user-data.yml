#cloud-config

---
coreos:
  update:
    reboot-strategy: etcd-lock

  units:
    - name: rpc-mountd.service
      command: start
      enable: true

    - name: nfsd.service
      command: start
      enable: true

    - name: setup-cfssl.service
      command: start
      content: |
        [Unit]
        Description=setup cfssl
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        WorkingDirectory=/etc/cfssl
        ExecStartPre=/usr/bin/mkdir --parents /opt/bin
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/cfssl https://pkg.cfssl.org/R1.2/cfssl_linux-amd64
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/cfssljson https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64
        ExecStartPre=/usr/bin/chmod +x /opt/bin/cfssl /opt/bin/cfssljson
        ExecStartPre=/bin/sh -c "\
          /opt/bin/cfssl gencert -initca ca-csr.json \
          | /opt/bin/cfssljson -bare ca -"
        ExecStart=/usr/bin/rkt run \
          --net=host \
          --trust-keys-from-https \
          --volume=dns,kind=host,source=/etc/resolv.conf,readOnly=true --mount volume=dns,target=/etc/resolv.conf \
          --volume=ssl,kind=host,source=/etc/cfssl,readOnly=true --mount=volume=ssl,target=/etc/cfssl \
          quay.io/coreos/awscli -- aws s3 cp /etc/cfssl/ca.pem s3://${ s3-bucket }/

    - name: cfssl.service
      command: start
      content: |
        [Unit]
        Description=cfssl serve
        ConditionFileIsExecutable=/opt/bin/cfssl
        [Service]
        ExecStart=/opt/bin/cfssl serve \
          -address 0.0.0.0 \
          -ca /etc/cfssl/ca.pem \
          -ca-key /etc/cfssl/ca-key.pem \
          -config /etc/cfssl/ca-config.json
        Restart=always
        RestartSec=10

write-files:
  - path: /etc/cfssl/ca-csr.json
    content: |
      {
        "CN": "CA",
        "key": { "algo": "rsa", "size": 2048 },
        "names": [{ "C": "US", "L": "San Francisco", "O": "Kubernetes", "ST": "California" }]
      }

  - path: /etc/cfssl/ca-config.json
    content: |
      {
        "signing": {
          "default": { "expiry": "43800h" },
          "profiles": {
            "server": {
              "expiry": "43800h",
              "usages": [ "signing", "key encipherment", "server auth" ]
            },
            "client": {
              "expiry": "43800h",
              "usages": [ "signing", "key encipherment", "client auth" ]
            },
            "client-server": {
              "expiry": "43800h",
              "usages": [ "signing", "key encipherment", "server auth", "client auth" ]
            }
          }
        }
      }

  - path: /var/share/ssl/s3-bucket
    content: ${ s3-bucket }

  - path: /etc/exports
    permissions: '0644'
    content: /var/share/ssl/ pki.${ internal-tld }(rw,async,no_subtree_check,no_root_squash,fsid=0)
